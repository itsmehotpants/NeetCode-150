class Solution {
public:
    bool isAnagram(string s, string t) {
        //brute
        int n= s.length(),m=t.length();
if(n!=m) return false;

         sort(s.begin(), s.end());
        sort(t.begin(), t.end());
        if(s == t){
            return true;  
        }
        return false;
    }};

        // better
        unordered_map<char,int>mp1;
                unordered_map<char,int>mp2;
int n= s.length(),m=t.length();
if(n!=m) return false;

                for(char c:s){
                    mp1[c]++;
                }
                for(char c:t){
                    mp2[c]++;
                }
                for(char c:s){
                    if(mp1[c]!=mp2[c]) return false;
                }
                return true;
                
              //  optimal

                if(s.length() != t.length()){
            return false;
        }
        int arr[26] = {0};
        for(int i=0; i<s.length(); i++){
            arr[s[i]-'a']++;
            arr[t[i]-'a']--;
        }
        for(int i=0; i<26; i++){
            if(arr[i] != 0){
                return false;
            }
        }
        return true;

    }
};
