class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
     
     //  brute 1
     int n = nums.size();
        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                if (nums[i] == nums[j])
                    return true;
            }
        }
        return false;

        // brute
        int n = nums.size();
        sort(nums.begin(),nums.end());
        for(int i = 1;i<n;i++){
            if(nums[i]==nums[i-1]) return true;
        }
        return false;

        //  better
        unordered_map<int,int>mp;
        for(auto i:nums){
            mp[i]++;
        }
        for(auto x:mp){
            if(x.second >1) return true;
        }
        return false;

        // optimal single pass hash map

          unordered_map<int,int>mp;
        for(auto i:nums){
            if(mp[i]>=1) return true;
            mp[i]++;
            }
        
        return false;

    }
};
